<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Stats.KPI.ProcessingTimeByTestName">
<Description>
KPI to show total messages received/sent Ensemble production each day.</Description>
<Super>%DeepSee.KPI,Common</Super>
<TimeCreated>63440,60240.728841</TimeCreated>

<Parameter name="SrcVer">
<Description>
Location and Revision of this file in Perforce (Auto-updating)</Description>
<Default>$Id$</Default>
</Parameter>

<XData name="KPI">
<XMLNamespace>http://www.intersystems.com/deepsee/kpi</XMLNamespace>
<Data><![CDATA[
<kpi name="ProcessingTimeByTestName" sourceType="sql">
<filter name="TestName" sql="select distinct %exact(TestName) from Stats_Data.InputByTime"/>

<property name="ElapsedTime" columnNo="2" />
</kpi>
]]></Data>
</XData>

<Method name="%OnGetSQL">
<FormalSpec><![CDATA[&pSQL:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ret = $$$OK
	try {
		set testName=""
		$$$ThrowOnError(..ParseString(..%filterValues.TestName, .testName))
		
		if ((testName="") || ($l(testName,",")>1)) $$$ThrowStatus($$$ERROR($$$GeneralError, "Testname filter required"))
		
		set sigma=""
		&sql(select CAST(STDDEV(ElapsedTime/PercentElapsedTime) AS DEC(3,5)) into :sigma from stats_data.outputbypartner WHERE testname=:testName)
		if (sigma="") $$$ThrowStatus($$$ERROR($$$GeneralError, "Stddev (sigma) required"))
		
		// build SQL
		set tSQL = 
				"SELECT t.range, COUNT(*) / (SELECT COUNT(distinct(SessionId)) FROM Stats_Data.OutputByPartner WHERE testname='"_testName_"')"_
				"FROM "_
		        "(SELECT sessionid, "_
 			    " CASE WHEN sum(elapsedtime) < "_sigma_" THEN '1σ ("_sigma_"s)' "_
 				" WHEN sum(elapsedtime) >= "_sigma_" AND sum(elapsedtime) <= "_(2*sigma)_" THEN '2σ ("_(2*sigma)_"s)' "_
 				" ELSE '>2σ' END as range "_
 				" FROM Stats_Data.OutputByPartner "_
 				" WHERE testname='"_testName_"'"_
				" GROUP BY SessionId) t "_
				"GROUP BY t.range"
   		
   		set pSQL = tSQL
   		
   		set ^zdebug("KPI.ProcessingTimeByTestName")=pSQL
	} catch ex {
		set ret = ex.AsStatus()
	}
   	quit ret
]]></Implementation>
</Method>
</Class>
</Export>
